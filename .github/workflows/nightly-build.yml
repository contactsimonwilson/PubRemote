name: Nightly Builds

# Runs every night at 11:30 PM
on:
  schedule:
    - cron: "30 23 * * *" 

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

# References: 
# https://github.com/softprops/action-gh-release
# https://docs.platformio.org/en/stable/integration/ci/github-actions.html
jobs:
  delete_old_release:
    if: github.repository == 'contactsimonwilson/PubRemote'
    
    permissions:
      # Write permission is required to create a github release
      contents: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Check for Tag
        id: check_for_tag
        run: |
          TAG_NAME="nightly"
          git fetch --tags
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "TAG_FOUND=YES" >> $GITHUB_ENV
          else
            echo "TAG_FOUND=NO" >> $GITHUB_ENV
          fi

      # Delete the release if it already exists
      - name: Delete tag
        if: ${{ env.TAG_FOUND == 'YES' }}
        run: gh release delete nightly --cleanup-tag 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for 2 seconds
        run: sleep 2
         
  build_and_release:
    if: github.repository == 'contactsimonwilson/PubRemote'
    needs: "delete_old_release"
    
    permissions:
      # Write permission is required to create a github release
      contents: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
          
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO Project
        run: pio run
        env:
          PLATFORMIO_BUILD_FLAGS: '-D RELEASE_VARIANT=\"nightly\"'

      - name: Get Current Date
        run: echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Attach ZIPs and Publish
        uses: softprops/action-gh-release@v2
        with: 
          files: "*.zip"
          name: "${{ env.TODAY }} Nightly Build"
          prerelease: true
          tag_name: "nightly"
          fail_on_unmatched_files: true
          generate_release_notes: true
